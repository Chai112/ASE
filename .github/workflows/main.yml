# This is a basic workflow to help you get started with Actions

name: Cross-Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Compile for Windows
      run: |
        echo|set /p="#include <stdio.h>" > a.c
        echo. >> a.c
        echo|set /p="int main () { printf("testing\n"); return 0; }" >> a.c
        type a.c
        gcc a.c -o b.exe
        b.exe
        
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: product-windows
        path: b.exe
    
  # This workflow contains a single job called "build"
  build-macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    # Test compilation capabilites of the system
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
        touch a.c
        echo "#include<stdio.h>" > a.c
        echo "int main() { printf(\"testing\n\"); return 0; }" >> a.c
        gcc a.c -o b.exe
        ./b.exe
        
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: product-macos
        path: b.exe
